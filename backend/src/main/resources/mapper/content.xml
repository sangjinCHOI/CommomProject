<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.persona.content.mapper.ContentMapper">
	<insert id="contentCreate" parameterType="contentCreateRequest"  useGeneratedKeys="true" keyProperty="contentSeq">
		insert into tb_content (character_seq, category_number, content_text, content_is_public, content_is_media, content_created_date)
		values (#{characterSeq}, #{categoryNumber}, #{contentText}, #{contentIsPublic}, #{contentIsMedia}, now())
	</insert>
	
	<update id="contentModify" parameterType="contentModifyRequest">
		update tb_content
		set <if test="contentText != null and contentText != ''">
				content_text = #{contentText},
			</if>
			<if test="contentIsPublic != null and contentIsPublic != ''">
				content_is_public = #{contentIsPublic},
			</if>
			<if test="contentIsMedia != null and contentIsMedia != ''">
				content_is_media = #{contentIsMedia},
			</if>
		   		content_modified_date = now()
		where content_seq = #{contentSeq}
	</update>
	
	<update id="contentDelete" parameterType="int">
		update tb_content
		set content_is_active = 0, content_modified_date = now()
		where content_seq = #{contentSeq}
	</update>
	
	
	<select id="contentGet" resultType="ContentGetResponse">
		select content_seq as contentSeq, content_is_active as contentIsActive, content_is_public as contentIsPublic, character_seq as characterSeq, category_number as categoryNumber, content_text as contentText, content_like as contentLike, content_save as contentSave, content_is_media as contentIsMedia, content_created_date contentCreatedDate, content_modified_Date as contentModifiedDate, (select count(distinct content_seq) 
		from tb_content_like
		where content_seq = #{contentSeq} and character_seq = #{characterNow}) as contentIsLike, (select count(distinct content_seq) from tb_stored_content where content_seq = #{contentSeq} and character_seq = #{characterNow}) as contentIsStore, (select count(*) from tb_reply where content_seq = tb_content.content_seq and reply_is_active = 1) AS replyCount,
        (select nickname from tb_character where character_seq = tb_content.character_seq) AS contentWriter,
        (select file_path from tb_file where relation_tb = 'tb_character' AND relation_seq = tb_content.character_seq) AS writerProfile,
        (select count(*) from tb_tag where content_seq = tb_content.content_seq) AS tagCount,
        (select GROUP_CONCAT(tag_text separator '|') from tb_tag where content_seq = tb_content.content_seq GROUP BY content_seq) AS tags,
        (select count(*) from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.content_seq ) AS fileCount,
        (select GROUP_CONCAT(file_path separator '|') from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.content_seq GROUP BY relation_seq) AS contentFilePath,
        (select GROUP_CONCAT(file_name separator '|') from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.content_seq GROUP BY relation_seq) AS contentFileName
		from tb_content
		where content_seq = #{contentSeq} and content_is_active = 1
	</select>
	
	<select id="contentList" resultType="ContentGetResponse">
		select content_seq as contentSeq, content_is_active as contentIsActive, content_is_public as contentIsPublic, character_seq as characterSeq, category_number as categoryNumber, content_text as contentText, content_like as contentLike, content_save as contentSave, content_is_media as contentIsMedia, content_created_date contentCreatedDate, content_modified_Date as contentModifiedDate, (select count(distinct content_seq) 
		from tb_content_like
		where content_seq = tb_content.content_Seq and character_seq = #{characterNow}) as contentIsLike, (select count(distinct content_seq) from tb_stored_content where content_seq = tb_content.content_seq and character_seq = #{characterNow}) as contentIsStore, (select count(*) from tb_reply where content_seq = tb_content.content_seq and reply_is_active = 1) AS replyCount,
        (select nickname from tb_character where character_seq = tb_content.character_seq) AS contentWriter,
        (select file_path from tb_file where relation_tb = 'tb_character' AND relation_seq = tb_content.character_seq) AS writerProfile,
        (select count(*) from tb_tag where content_seq = tb_content.content_seq) AS tagCount,
        (select GROUP_CONCAT(tag_text separator '|') from tb_tag where content_seq = tb_content.content_seq GROUP BY content_seq) AS tags,
        (select count(*) from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.character_seq ) AS fileCount,
        (select GROUP_CONCAT(file_path separator '|') from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.content_seq GROUP BY relation_seq) AS contentFilePath,
        (select GROUP_CONCAT(file_name separator '|') from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.content_seq GROUP BY relation_seq) AS contentFileName
		from tb_content
		where
		<choose>
			<when test="condition == 'main'">
				(character_seq IN (select followee from tb_follow where follower = #{characterNow}) or character_seq = #{characterNow})
			</when>
			<when test="condition == 'tag'">
				content_seq In (select content_seq from tb_tag where tag_text = #{tagText})
			</when>
			<when test="condition == 'text'">
				content_text LIKE CONCAT('%', #{contentText}, '%')
			</when>
			<when test="condition == 'person'">
				character_seq = #{characterSeq}
			</when>
		</choose>
		and content_is_active = 1
	</select>
	
	<insert id="hashtagCreate" >
		insert into tb_tag (content_seq, tag_text)
		values
		<foreach collection="hashtag" index="index" item="item" separator=",">(#{contentSeq}, #{item})</foreach>
	</insert>
	
	<delete id="hashtagModify">
		delete from tb_tag
		where content_seq = #{contentSeq}
	</delete>
	
	<select id="hashtagGet" resultType="String">
		select tag_text
		from tb_tag
		where content_Seq = #{contentSeq}
	</select>
	
	
	
	
</mapper>