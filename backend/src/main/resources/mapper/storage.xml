<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.persona.domain.storage.mapper.StorageMapper">
	<insert id="storageCreate" parameterType="storageCreateRequest" useGeneratedKeys="true" keyProperty="storageSeq">
		insert into tb_storage (character_seq, storage_name, storage_public, storage_created_date)
		values (#{characterSeq}, #{storageName}, #{storagePublic}, now())
	</insert>
	
	<update id="storageModify" parameterType="storageModifyRequest">
		update tb_storage
		set storage_name = #{storageName}, storage_public = #{storagePublic}, storage_modified_date = now()
		where storage_seq = #{storageSeq}
	</update>
	
	<delete id="storageDelete" parameterType="int">
		delete from tb_storage
		where storage_seq = #{storageSeq}
	</delete>
	
	<select id="storageList" parameterType="int" resultType="StorageListResponse">
		select storage_seq as storageSeq, storage_name as storageName, storage_public as storagePublic, storageFile.file_path as storageImagePath, storageFile.file_name as storageImageName
		from tb_storage 
		left outer join tb_file storageFile on storageFile.relation_tb = 'tb_storage'
		and storageFile.relation_seq = tb_storage.storage_seq
		and storageFile.file_is_active = 1
		where character_seq = #{characterSeq}
	</select>
	
	<insert id="contentStore" parameterType="contentStoreRequest">
		insert into tb_stored_content (content_seq, storage_seq, character_seq)
		values (#{contentSeq}, #{storageSeq}, #{characterSeq})
	</insert>
	
	<update id="contentStoreUpdate" parameterType="int">
		update tb_content
		set content_save = content_save + 1
		where content_seq = #{contentSeq}
	</update>
	
	<delete id="contentUnstore" parameterType="int">
		delete from tb_stored_content
		where content_seq = #{contentSeq} and character_seq = #{characterSeq}
	</delete>
	
	<update id="contentUnstoreUpdate" parameterType="int">
		update tb_content
		set content_save = content_save - 1
		where content_seq = #{contentSeq}
	</update>
	
	<select id="contentStoreList" parameterType="int" resultType="ContentStoreListResponse">
		select character_seq, nickname
		from tb_character
		where character_seq in (select character_seq from tb_stored_content where content_seq = #{contentSeq})
	</select>
	
	<select id="storageContentList" parameterType="StorageContentListRequest" resultType="ContentGetResponse">
		select content_seq as contentSeq, content_is_active as contentIsActive, content_is_public as contentIsPublic, character_seq as characterSeq, category_number as categorySeq, content_text as contentText, content_like as contentLike, content_save as contentSave, content_is_media as contentIsMedia, content_created_date contentCreatedDate, content_modified_Date as contentModifiedDate, (select count(distinct content_seq)
		from tb_content_like
		where content_seq = tb_content.content_Seq and character_seq = #{characterNow}) as contentIsLike, (select count(distinct content_seq) from tb_stored_content where content_seq = tb_content.content_seq and character_seq = #{characterNow}) as contentIsStore, (select count(*) from tb_reply where content_seq = tb_content.content_seq) AS replyCount,
        (select nickname from tb_character where character_seq = tb_content.character_seq) AS contentWriter,
        (select file_path from tb_file where relation_tb = 'tb_character' AND relation_seq = tb_content.character_seq) AS writerProfile,
        (select count(*) from tb_tag where content_seq = tb_content.content_seq) AS tagCount,
        (select GROUP_CONCAT(tag_text separator '|') from tb_tag where content_seq = tb_content.content_seq GROUP BY content_seq) AS tags,
        (select count(*) from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.character_seq ) AS fileCount,
        (select GROUP_CONCAT(file_path separator '|') from tb_file where relation_tb = 'tb_content' AND relation_seq = tb_content.character_seq GROUP BY relation_seq) AS files
		from tb_content
		where content_seq In (select content_seq from tb_stored_content where storage_seq = #{storageSeq}) and content_is_active = 1
	</select>
	
	
</mapper>